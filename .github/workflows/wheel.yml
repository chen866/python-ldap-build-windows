name: Build and Publish python-ldap wheels for Windows
on:
    release:
        types: [published]
    workflow_dispatch:


permissions:
    id-token: write
    contents: write

env:
    OPENSSL_VER: openssl-1.1.1w
    OPENLDAP_VER: openldap-2.4.59
    PYTHONLDAP_VER: python-ldap-build-windows-3.4.4
    CIBW_TEST_COMMAND: python -c"import ldap;print(ldap.__version__)"
    CIBW_SKIP: "pp* cp36* cp37* cp38* cp39*"
    MSBUILDTREATHIGHERTOOLSVERSIONASCURRENT: 1

jobs:
    build_amd64:
        name: Build AMD64 wheels
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-2022]
        env:
            VS_PLATFORM: x64
            OPENSSL_CONFIG: VC-WIN64A-masm
        steps:
            - uses: actions/checkout@v4
            - uses: microsoft/setup-msbuild@v1.3
              with:
                  msbuild-architecture: x64
            - uses: ilammy/msvc-dev-cmd@v1
              with:
                  arch: amd64
            - run: build_openssl.cmd
              shell: cmd
            - run: build_openldap.cmd
              shell: cmd
            - run: build_python-ldap.cmd
              shell: cmd
            - uses: pypa/cibuildwheel@v2.22.0
              env:
                  CIBW_ARCHS_WINDOWS: AMD64
            - uses: actions/upload-artifact@v4
              with:
                  path: ./wheelhouse/*.whl
                  name: wheels-win-amd64
    build_x86:
        name: Build x86 wheels
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-2022]
        env:
            VS_PLATFORM: Win32
            OPENSSL_CONFIG: VC-WIN32
        steps:
            - uses: actions/checkout@v4
            - uses: microsoft/setup-msbuild@v1.3
              with:
                  msbuild-architecture: x86
            - uses: ilammy/msvc-dev-cmd@v1
              with:
                  arch: amd64_x86
            - uses: ilammy/setup-nasm@v1
            - run: build_openssl.cmd
              shell: cmd
            - run: build_openldap.cmd
              shell: cmd
            - run: build_python-ldap.cmd
              shell: cmd
            - uses: pypa/cibuildwheel@v2.22.0
              env:
                  CIBW_ARCHS_WINDOWS: x86
            - uses: actions/upload-artifact@v4
              with:
                  path: ./wheelhouse/*.whl
                  name: wheels-win32

    publish:
        name: Publish to PyPI
        needs: [build_amd64, build_x86]
        runs-on: ubuntu-latest
        environment: pypi
        permissions:
            id-token: write
        steps:
            - uses: actions/checkout@v4
            - name: Download all wheels
              uses: actions/download-artifact@v4
              with:
                  path: dist

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.x'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install twine

            - name: Verify distribution files
              run: ls -l dist/wheelhouse/

            - name: Publish package to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  packages-dir: dist/wheelhouse/
